# Generated by Django 5.2.4 on 2025-09-26 19:41

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('workspace', '0016_tag'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AlterField(
            model_name='pageimage',
            name='task_id',
            field=models.CharField(blank=True, help_text='Celery task ID for tracking and cancellation', max_length=20, null=True),
        ),
        migrations.CreateModel(
            name='JobStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('task_id', models.CharField(db_index=True, help_text='Celery task ID', max_length=20, unique=True)),
                ('state', models.CharField(choices=[('pending', 'Pending'), ('running', 'Running'), ('success', 'Success'), ('failure', 'Failure'), ('retry', 'Retry'), ('revoked', 'Revoked')], db_index=True, default='pending', max_length=16)),
                ('pct', models.PositiveSmallIntegerField(default=0, help_text='Progress percentage (0-100)')),
                ('step', models.CharField(blank=True, help_text='Current step description', max_length=100, null=True)),
                ('meta_json', models.JSONField(default=dict, help_text='Additional metadata')),
                ('seq', models.PositiveIntegerField(default=0, help_text='Monotonic sequence number for ordering')),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True)),
                ('project', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='job_statuses', to='workspace.workspace')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='job_statuses', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-updated_at'],
                'indexes': [models.Index(fields=['task_id'], name='workspace_j_task_id_8b7659_idx'), models.Index(fields=['state', 'updated_at'], name='workspace_j_state_9ee83d_idx'), models.Index(fields=['user', 'state', 'updated_at'], name='workspace_j_user_id_826c0e_idx'), models.Index(fields=['project', 'state', 'updated_at'], name='workspace_j_project_40c6af_idx'), models.Index(fields=['updated_at'], name='workspace_j_updated_5a3911_idx'), models.Index(fields=['task_id', 'seq'], name='jobstatus_task_seq_idx')],
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('info', 'Info'), ('success', 'Success'), ('warning', 'Warning'), ('error', 'Error'), ('task_queued', 'Task Queued'), ('task_started', 'Task Started'), ('task_progress', 'Task Progress'), ('task_completed', 'Task Completed'), ('task_failed', 'Task Failed')], db_index=True, default='info', max_length=32)),
                ('payload_json', models.JSONField(default=dict, help_text='Additional notification data')),
                ('link', models.URLField(blank=True, help_text='Optional link to related resource', max_length=500, null=True)),
                ('read_at', models.DateTimeField(blank=True, db_index=True, help_text='When the notification was read', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('project', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='workspace.workspace')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['user', 'type', 'created_at'], name='notif_user_type_idx'), models.Index(fields=['project', 'created_at'], name='notif_project_created_idx'), models.Index(fields=['created_at'], name='notif_created_idx'), models.Index(condition=models.Q(('read_at__isnull', True)), fields=['user', 'created_at'], name='notif_user_readnull_idx')],
            },
        ),
    ]
